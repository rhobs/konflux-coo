---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  annotations:
    pipelinesascode.tekton.dev/task: "[coo-install, coo-e2e-tests]"
  name: coo-e2e-tests-pipeline
spec:
  description: |
    This pipeline automates the process of running end-to-end tests for COO
    using a ROSA (Red Hat OpenShift Service on AWS) cluster. The pipeline provisions
    the ROSA cluster, installs the COO using the installer, runs the tests, collects artifacts,
    and finally deprovisions the ROSA cluster.
  params:
    - name: SNAPSHOT
      description: 'The JSON string representing the snapshot of the application under test.'
      default: '{"components": [{"name":"test-app", "containerImage": "quay.io/example/repo:latest"}]}'
      type: string
    - name: test-name
      description: 'The name of the test corresponding to a defined Konflux integration test.'
      default: 'coo-e2e-tests'
    - name: namespace
      description: 'Namespace to run tests in'
      default: 'openshift-cluster-observability-operator'
  tasks:
    - name: eaas-provision-space
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/konflux-ci/build-definitions.git
          - name: revision
            value: main
          - name: pathInRepo
            value: task/eaas-provision-space/0.1/eaas-provision-space.yaml
      params:
        - name: ownerKind
          value: PipelineRun
        - name: ownerName
          value: $(context.pipelineRun.name)
        - name: ownerUid
          value: $(context.pipelineRun.uid)
    - name: provision-cluster
      runAfter:
        - eaas-provision-space
      taskSpec:
        results:
          - name: clusterName
            value: "$(steps.create-cluster.results.clusterName)"
        steps:
          - name: get-supported-versions
            ref:
              resolver: git
              params:
                - name: url
                  value: https://github.com/konflux-ci/build-definitions.git
                - name: revision
                  value: main
                - name: pathInRepo
                  value: stepactions/eaas-get-supported-ephemeral-cluster-versions/0.1/eaas-get-supported-ephemeral-cluster-versions.yaml
            params:
              - name: eaasSpaceSecretRef
                value: $(tasks.eaas-provision-space.results.secretRef)
          - name: pick-version
            ref:
              resolver: git
              params:
                - name: url
                  value: https://github.com/konflux-ci/build-definitions.git
                - name: revision
                  value: main
                - name: pathInRepo
                  value: stepactions/eaas-get-latest-openshift-version-by-prefix/0.1/eaas-get-latest-openshift-version-by-prefix.yaml
            params:
              - name: prefix
                value: "4.17."
          - name: create-cluster
            ref:
              resolver: git
              params:
                - name: url
                  value: https://github.com/konflux-ci/build-definitions.git
                - name: revision
                  value: main
                - name: pathInRepo
                  value: stepactions/eaas-create-ephemeral-cluster-hypershift-aws/0.1/eaas-create-ephemeral-cluster-hypershift-aws.yaml
            params:
              - name: eaasSpaceSecretRef
                value: $(tasks.eaas-provision-space.results.secretRef)
              - name: version
                value: "$(steps.pick-version.results.version)"
              - name: instanceType
                value: "m5.2xlarge"
              - name: timeout
                value: "40m"
              - name: imageContentSources
                value: |
                  - source: registry.redhat.io/cluster-observability-operator/
                    mirrors:
                      - quay.io/redhat-user-workloads/cluster-observabilit-tenant
    - name: coo-install
      description: Task to install bundle onto ephemeral namespace
      runAfter:
        - provision-cluster
      params:
        - name: SNAPSHOT
          value: $(params.SNAPSHOT)
        - name: namespace
          value: "$(params.namespace)"
      taskSpec:
        params:
          - name: SNAPSHOT
          - name: namespace
            type: string
        volumes:
          - name: credentials
            emptyDir: {}
        steps:
          - name: get-kubeconfig
            ref:
              resolver: git
              params:
                - name: url
                  value: https://github.com/konflux-ci/build-definitions.git
                - name: revision
                  value: main
                - name: pathInRepo
                  value: stepactions/eaas-get-ephemeral-cluster-credentials/0.1/eaas-get-ephemeral-cluster-credentials.yaml
            params:
              - name: eaasSpaceSecretRef
                value: $(tasks.eaas-provision-space.results.secretRef)
              - name: clusterName
                value: "$(tasks.provision-cluster.results.clusterName)"
              - name: credentials
                value: credentials
          - name: install-operator
            env:
              - name: SNAPSHOT
                value: $(params.SNAPSHOT)
              - name: KONFLUX_COMPONENT_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.labels['appstudio.openshift.io/component']
              - name: KUBECONFIG
                value: "/credentials/$(steps.get-kubeconfig.results.kubeconfig)"
            volumeMounts:
              - name: credentials
                mountPath: /credentials
            image: registry.redhat.io/openshift4/ose-cli:latest
            script: |
              echo "Kubeconfig file"
              cat $KUBECONFIG

              echo "Install operator-sdk and dependencies"
              dnf -y install jq python3-pip
              export OPERATOR_SDK_VERSION=1.36.1
              export ARCH=$(case $(uname -m) in x86_64) echo -n amd64 ;; aarch64) echo -n arm64 ;; *) echo -n $(uname -m) ;; esac)
              export OPERATOR_SDK_DL_URL=https://github.com/operator-framework/operator-sdk/releases/download/v${OPERATOR_SDK_VERSION}
              curl -Lo /usr/local/bin/operator-sdk ${OPERATOR_SDK_DL_URL}/operator-sdk_linux_${ARCH}
              chmod +x /usr/local/bin/operator-sdk
              operator-sdk version

              echo "Create namespace to install COO"
              oc create namespace $(params.namespace)
              oc label namespaces $(params.namespace) openshift.io/cluster-monitoring=true --overwrite=true

              echo "Get the bundle image"
              echo ${KONFLUX_COMPONENT_NAME}
              export BUNDLE_IMAGE="$(jq -r --arg component_name "$KONFLUX_COMPONENT_NAME" '.components[] | select(.name == $component_name) | .containerImage' <<< "$SNAPSHOT")"
              echo "${BUNDLE_IMAGE}"

              echo "Install COO"
              coo_install_ns=$(params.namespace)
              operator-sdk run bundle --timeout=5m --namespace "${coo_install_ns}" "$BUNDLE_IMAGE" --verbose
              oc wait -n "${coo_install_ns}" --for=condition=Available deploy/obo-prometheus-operator --timeout=300s
              oc wait -n "${coo_install_ns}" --for=condition=Available deploy/obo-prometheus-operator-admission-webhook --timeout=300s
              oc wait -n "${coo_install_ns}" --for=condition=Available deploy/observability-operator --timeout=300s

              echo "Enable OCP"
              CSV_NAME=$(oc -n "${coo_install_ns}" get csv | grep 'observability-operator' | awk '{print $1}')
              oc -n "${coo_install_ns}" get csv "$CSV_NAME" -oyaml > "/tmp/coo-csv.yml"
              /tmp/yq -i '(.spec.install.spec.deployments[] | select(.name == "observability-operator").spec.template.spec.containers[] | select(.name == "operator").args) += ["--openshift.enabled=true"]' "/tmp/coo-csv.yml"
              oc replace -f "/tmp/coo-csv.yml"
    - name: coo-e2e-tests
      description: Task to run tests from service repository
      runAfter:
        - coo-install
      params:
        - name: COO_TESTS_BRANCH
          value: $(params.coo_tests_branch)
      taskSpec:
        params:
          - name: COO_TESTS_BRANCH
            type: string
        volumes:
          - name: credentials
            emptyDir: {}
        steps:
          - name: get-kubeconfig
            ref:
              resolver: git
              params:
                - name: url
                  value: https://github.com/konflux-ci/build-definitions.git
                - name: revision
                  value: main
                - name: pathInRepo
                  value: stepactions/eaas-get-ephemeral-cluster-credentials/0.1/eaas-get-ephemeral-cluster-credentials.yaml
            params:
              - name: eaasSpaceSecretRef
                value: $(tasks.eaas-provision-space.results.secretRef)
              - name: clusterName
                value: "$(tasks.provision-cluster.results.clusterName)"
              - name: credentials
                value: credentials
          - name: run-e2e-tests
            volumeMounts:
              - name: credentials
                mountPath: /credentials
            env:
              - name: KUBECONFIG
                value: "/credentials/$(steps.get-kubeconfig.results.kubeconfig)"
            image: registry.redhat.io/openshift4/ose-cli:latest
            script: |
              echo "Kubeconfig file"
              cat $KUBECONFIG
              COO_TESTS_BRANCH=$(params.COO_TESTS_BRANCH)

              echo "Intall dependencies"
              dnf -y install jq vim unzip git make

              echo "Install GO"
              curl -Lo /go.tar.gz https://go.dev/dl/go1.22.10.linux-amd64.tar.gz
              tar -C /usr/local -xzf /go.tar.gz
              export PATH=$PATH:/usr/local/go/bin
              # Set the Go path and Go cache environment variables
              export GOPATH=/tmp/go
              export GOBIN=/tmp/go/bin
              export GOCACHE=/tmp/.cache/go-build
              export PATH=$PATH:/tmp/go/bin

              # Create the /tmp/go/bin and build cache directories, and grant read and write permissions to all users
              mkdir -p /tmp/go/bin $GOCACHE \
                && chmod -R 777 /tmp/go/bin $GOPATH $GOCACHE
              go version

              echo "Install kubectl and oc"
              cd /tmp/ \
              && curl -L -o oc.tar.gz https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/latest/openshift-client-linux-amd64-rhel8.tar.gz \
              && tar -xvzf oc.tar.gz \
              && chmod +x kubectl oc \
              && mv oc kubectl /usr/local/bin/

              echo "Run e2e tests"
              git clone git@github.com:rhobs/observability-operator.git /tmp/coo-tests
              cd /tmp/coo-tests
              git checkout $COO_TESTS_BRANCH
              make build

              # Unset environment variable which conflicts with Chainsaw
              unset NAMESPACE

              # Execute coo e2e tests
              /tmp/coo-tests/test/run-e2e.sh --no-deploy --ns "$NAMESPACE" --ci