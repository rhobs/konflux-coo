#!/usr/bin/env bash

set -ex

csv_file="$1"
annotation_file="$2"
PRODUCT_VERSION="1.0.0"
X_VERSION="1"
Y_VERSION="0"
Z_VERSION="0"
CSV_REPLACES_VERSION="0.4.1"

# Add openshift specific annotations to CSV file
# https://docs.openshift.com/container-platform/4.14/operators/operator_sdk/osdk-generating-csvs.html#osdk-csv-annotations-infra_osdk-generating-csvs
yq -i '.metadata.annotations += {"features.operators.openshift.io/disconnected": "true"}' "$csv_file"
yq -i '.metadata.annotations += {"features.operators.openshift.io/fips-compliant": "false"}' "$csv_file"
yq -i '.metadata.annotations += {"features.operators.openshift.io/proxy-aware": "false"}' "$csv_file"
yq -i '.metadata.annotations += {"features.operators.openshift.io/tls-profiles": "false"}' "$csv_file"
yq -i '.metadata.annotations += {"features.operators.openshift.io/token-auth-aws": "false"}' "$csv_file"
yq -i '.metadata.annotations += {"features.operators.openshift.io/token-auth-azure": "false"}' "$csv_file"
yq -i '.metadata.annotations += {"features.operators.openshift.io/token-auth-gcp": "false"}' "$csv_file"
yq -i '.metadata.annotations += {"features.operators.openshift.io/cnf": "false"}' "$csv_file"
yq -i '.metadata.annotations += {"features.operators.openshift.io/cni": "false"}' "$csv_file"
yq -i '.metadata.annotations += {"features.operators.openshift.io/csi": "false"}' "$csv_file"
yq -i '.metadata.annotations += {"support": "Cluster Observability (https://issues.redhat.com/projects/COO/)"}' "$csv_file"
yq -i '.metadata.annotations += {"operators.openshift.io/valid-subscription": "[\"OpenShift Kubernetes Engine\", \"OpenShift Container Platform\", \"OpenShift Platform Plus\"]"}' "$csv_file"
yq -i '.metadata.labels += {"operatorframework.io/arch.amd64": "supported"}' "$csv_file"
yq -i '.metadata.labels += {"operatorframework.io/arch.arm64": "supported"}' "$csv_file"
yq -i '.metadata.labels += {"operatorframework.io/arch.ppc64le": "supported"}' "$csv_file"
yq -i '.metadata.labels += {"operatorframework.io/arch.s390x": "supported"}' "$csv_file"

COO_IMAGE_URL="quay.io/redhat-user-workloads/cluster-observabilit-tenant/cluster-observability-operator-container@sha256:1f9fd6dfed54e704dbd97a121736f8cde74ddf72d09006a52f7a62997f6f08b3"

COO_CONF_RELOADER_IMAGE_URL="quay.io/redhat-user-workloads/cluster-observabilit-tenant/obo-prometheus-operator-prometheus-config-reloader@sha256:85c95dfcf4a2eaa719ff129abd5cccd5edf8a5e81d247ae706b178414bf967ff"

COO_ALERTMANAGER_IMAGE_URL="quay.io/redhat-user-workloads/cluster-observabilit-tenant/alertmanager@sha256:976c64f2a45fe5bbb4de1b14036bf1eacf42a9bf069e987ef753c997e3cef682"

COO_PROMETHEUS_IMAGE_URL="quay.io/redhat-user-workloads/cluster-observabilit-tenant/cluster-observability-operator-1-0/prometheus@sha256:81b37e86f5cf1b16b86ee65cc9f8df7e23775c44a621b77b399f828bb67aeefa"

COO_THANOS_IMAGE_URL="quay.io/redhat-user-workloads/cluster-observabilit-tenant/cluster-observability-operator-1-0/thanos@sha256:2d58e4752581d454dc766b6847d37ecb24bf2567aad5bde21b8c7be0feba3f19"

COO_ADMISSION_WEBHOOK_IMAGE_URL="quay.io/redhat-user-workloads/cluster-observabilit-tenant/obo-prometheus-operator-admission-webhook@sha256:defe64ca4d679589d4a53ec6341952e534e306a81237184f53cc3b7ee939990d"

COO_PO_IMAGE_URL="quay.io/redhat-user-workloads/cluster-observabilit-tenant/obo-prometheus-operator@sha256:794a8f6dbf2d98d0ca8763fc6c045ba407e43b483fee31cf1a36f5b6a36fd7b3"

COO_CONSOLE_DASHBOARDS_PLUGIN_IMAGE_URL="quay.io/redhat-user-workloads/cluster-observabilit-tenant/cluster-observability-operator-1-0/dashboards-console-plugin-0-3@sha256:113c3b644822f853ce62845d07974dfbc55c9353cf031309cb58262995638f76"

COO_CONSOLE_DISTRIBUTED_TRACING_PLUGIN_IMAGE_URL="quay.io/redhat-user-workloads/cluster-observabilit-tenant/cluster-observability-operator-1-0/distributed-tracing-console-plugin-0-3@sha256:93401be05380242923bb7683cc22aee798c8c06d4933a8881b60395f3bc7a546"

COO_CONSOLE_LOGGING_PLUGIN_IMAGE_URL="quay.io/redhat-user-workloads/cluster-observabilit-tenant/cluster-observability-operator-1-0/logging-console-plugin-6-0@sha256:7f1cd14cdd6232cb26240fa8df3b5e807d140c5cd1d2d1fc8455550152b7ad98"

COO_CONSOLE_TROUBLESHOOTING_PANEL_PLUGIN_IMAGE_URL="quay.io/redhat-user-workloads/cluster-observabilit-tenant/cluster-observability-operator-1-0/troubleshooting-panel-console-plugin-0-3@sha256:cc45667df49a79c16bc548e914f137f76306aee194866770e22a3e3782fd374e"

COO_CONSOLE_MONITORING_PLUGIN_IMAGE_URL="quay.io/redhat-user-workloads/cluster-observabilit-tenant/cluster-observability-operator-1-0/monitoring-console-plugin-0-3@sha256:2a1d0cf8198ddd4b69aa3173d25cb0ce0c7b743ea4e740a02584450b4b729f1e"

COO_KORREL8R_IMAGE_URL="quay.io/redhat-user-workloads/cluster-observabilit-tenant/cluster-observability-operator-1-0/korrel8r@sha256:d6e5baf728c0c82f1efb3dcdd6c0b928b66cb2364a55f654afff6359c1a1fd3c"

# Add related images for disconnected installs
# First we add an empty list
yq -i '(.spec += {"relatedImages": []})' "$csv_file"
VALUE="${COO_IMAGE_URL}" yq -i '(.spec.relatedImages += [{"name":"cluster-observability-operator", "image": strenv(VALUE)}])' "$csv_file"
VALUE="${COO_CONF_RELOADER_IMAGE_URL}" yq -i '(.spec.relatedImages += [{"name":"prometheus-config-reloader", "image": strenv(VALUE)}])' "$csv_file"
VALUE="${COO_ALERTMANAGER_IMAGE_URL}" yq -i '(.spec.relatedImages += [{"name":"alertmanager", "image": strenv(VALUE)}])' "$csv_file"
VALUE="${COO_PROMETHEUS_IMAGE_URL}" yq -i '(.spec.relatedImages += [{"name":"prometheus", "image": strenv(VALUE)}])' "$csv_file"
VALUE="${COO_THANOS_IMAGE_URL}" yq -i '(.spec.relatedImages += [{"name":"thanos", "image": strenv(VALUE)}])' "$csv_file"
VALUE="${COO_ADMISSION_WEBHOOK_IMAGE_URL}" yq -i '(.spec.relatedImages += [{"name":"prometheus-operator-admission-webhook", "image": strenv(VALUE)}])' "$csv_file"
VALUE="${COO_PO_IMAGE_URL}" yq -i '(.spec.relatedImages += [{"name":"prometheus-operator", "image": strenv(VALUE)}])' "$csv_file"
VALUE="${COO_CONSOLE_DASHBOARDS_PLUGIN_IMAGE_URL}" yq -i '(.spec.relatedImages += [{"name":"ui-dashboards", "image": strenv(VALUE)}])' "$csv_file"
VALUE="${COO_CONSOLE_DISTRIBUTED_TRACING_PLUGIN_IMAGE_URL}" yq -i '(.spec.relatedImages += [{"name":"ui-tracing", "image": strenv(VALUE)}])' "$csv_file"
VALUE="${COO_CONSOLE_LOGGING_PLUGIN_IMAGE_URL}" yq -i '(.spec.relatedImages += [{"name":"ui-logging", "image": strenv(VALUE)}])' "$csv_file"
VALUE="${COO_CONSOLE_TROUBLESHOOTING_PANEL_PLUGIN_IMAGE_URL}" yq -i '(.spec.relatedImages += [{"name":"ui-troubleshooting", "image": strenv(VALUE)}])' "$csv_file"
VALUE="${COO_CONSOLE_MONITORING_PLUGIN_IMAGE_URL}" yq -i '(.spec.relatedImages += [{"name":"ui-monitoring", "image": strenv(VALUE)}])' "$csv_file"
VALUE="${COO_KORREL8R_IMAGE_URL}" yq -i '(.spec.relatedImages += [{"name":"korrel8r", "image": strenv(VALUE)}])' "$csv_file"

# Replace quay.io/rhobs image urls with registry-proxy.engineering.redhat.com/
# urls to get brew builds to pass
sed -i -e "s|quay.io/rhobs/observability-operator.*|${COO_IMAGE_URL}|g" "$csv_file"
sed -i -e "s|quay.io/rhobs/obo-prometheus-operator.*|${COO_PO_IMAGE_URL}|g" "$csv_file"
sed -i -e "s|quay.io/rhobs/obo-admission-webhook.*|${COO_ADMISSION_WEBHOOK_IMAGE_URL}|g" "$csv_file"

# Replace annotation values used in the upstream bundle for those in the downstream product bundle
sed -i -e "s|operators.operatorframework.io.bundle.package.v1: observability-operator|operators.operatorframework.io.bundle.package.v1: cluster-observability-operator|g" "$annotation_file"

# Replace displayName value used in the upstream bundle so it matches the
# downstream product bundle name
sed -i -e "s|displayName: Observability Operator|displayName: Cluster Observability Operator|g" "$csv_file"
sed -i -e "s|Observability Operator is a Go|Cluster Observability Operator is a Go|g" "$csv_file"

# Replace suggest-namespace annotation if present
sed -i -r "s|operatorframework.io/suggested-namespace: observability-operator|operatorframework.io/suggested-namespace: openshift-cluster-observability-operator|" "$csv_file"

# Replace link value used in the upstream bundle with the downstream name
sed -i -e "s|name: Observability Operator|name: Cluster Observability Operator|g" "$csv_file"

# first add an empty env list to the obo operator container if it doesn't exist
# already
yq -i '(.spec.install.spec.deployments[] | select(.name == "observability-operator").spec.template.spec.containers[] | select(.name == "operator") | select(has("env") | not)) += {"env": []}' "$csv_file"

# add the various images we want to use via an env
# variable. This allows OSBS to massage the pullspec (registry replacement,
# sha pinning)
# We do that by first using sed to replace the relevant image spec with our new
# env var.
# Then we use yq to add the env var value to the containers environment.
sed -i -e 's|--prometheus-config-reloader=.*|"--prometheus-config-reloader=$(RELATED_IMAGE_PROMETHEUS_CONFIG_RELOADER)"|' "$csv_file"
VALUE="${COO_CONF_RELOADER_IMAGE_URL}" yq -i '(.spec.install.spec.deployments[] | select(.name == "obo-prometheus-operator").spec.template.spec.containers[] | select(.name == "prometheus-operator").env) += [{"name":"RELATED_IMAGE_PROMETHEUS_CONFIG_RELOADER", "value": strenv(VALUE)}]' "$csv_file"

sed -i -e 's|--images=alertmanager=.*|"--images=alertmanager=$(RELATED_IMAGE_ALERTMANAGER)"|' "$csv_file"
VALUE="${COO_ALERTMANAGER_IMAGE_URL}" yq -i '(.spec.install.spec.deployments[] | select(.name == "observability-operator").spec.template.spec.containers[] | select(.name == "operator").env) += [{"name":"RELATED_IMAGE_ALERTMANAGER", "value": strenv(VALUE)}]' "$csv_file"

sed -i -e 's|--images=prometheus=.*|"--images=prometheus=$(RELATED_IMAGE_PROMETHEUS)"|' "$csv_file"
VALUE="${COO_PROMETHEUS_IMAGE_URL}" yq -i '(.spec.install.spec.deployments[] | select(.name == "observability-operator").spec.template.spec.containers[] | select(.name == "operator").env) += [{"name":"RELATED_IMAGE_PROMETHEUS", "value": strenv(VALUE)}]' "$csv_file"

sed -i -e 's|--images=thanos=.*|"--images=thanos=$(RELATED_IMAGE_THANOS)"|' "$csv_file"
VALUE="${COO_THANOS_IMAGE_URL}" yq -i '(.spec.install.spec.deployments[] | select(.name == "observability-operator").spec.template.spec.containers[] | select(.name == "operator").env) += [{"name":"RELATED_IMAGE_THANOS", "value": strenv(VALUE)}]' "$csv_file"

# TODO Once COO-144 is fixed reenable the sed command below and delete lines 150, 153, 156, 159, 162
# sed -i -e 's|--images=ui-dashboards=.*|"--images=ui-dashboards=$(RELATED_IMAGE_CONSOLE_DASHBOARDS_PLUGIN)"|' "$csv_file"
yq -i '(.spec.install.spec.deployments[] | select(.name == "observability-operator").spec.template.spec.containers[] | select(.name == "operator").args) +=  ["--images=ui-dashboards=$(RELATED_IMAGE_CONSOLE_DASHBOARDS_PLUGIN)"]' "$csv_file"
VALUE="${COO_CONSOLE_DASHBOARDS_PLUGIN_IMAGE_URL}" yq -i '(.spec.install.spec.deployments[] | select(.name == "observability-operator").spec.template.spec.containers[] | select(.name == "operator").env) += [{"name":"RELATED_IMAGE_CONSOLE_DASHBOARDS_PLUGIN", "value": strenv(VALUE)}]' "$csv_file"

yq -i '(.spec.install.spec.deployments[] | select(.name == "observability-operator").spec.template.spec.containers[] | select(.name == "operator").args) +=  ["--images=ui-distributed-tracing=$(RELATED_IMAGE_CONSOLE_DISTRIBUTED_TRACING_PLUGIN)"]' "$csv_file"
VALUE="${COO_CONSOLE_DISTRIBUTED_TRACING_PLUGIN_IMAGE_URL}" yq -i '(.spec.install.spec.deployments[] | select(.name == "observability-operator").spec.template.spec.containers[] | select(.name == "operator").env) += [{"name":"RELATED_IMAGE_CONSOLE_DISTRIBUTED_TRACING_PLUGIN", "value": strenv(VALUE)}]' "$csv_file"

yq -i '(.spec.install.spec.deployments[] | select(.name == "observability-operator").spec.template.spec.containers[] | select(.name == "operator").args) +=  ["--images=ui-logging=$(RELATED_IMAGE_CONSOLE_LOGGING_PLUGIN)"]' "$csv_file"
VALUE="${COO_CONSOLE_LOGGING_PLUGIN_IMAGE_URL}" yq -i '(.spec.install.spec.deployments[] | select(.name == "observability-operator").spec.template.spec.containers[] | select(.name == "operator").env) += [{"name":"RELATED_IMAGE_CONSOLE_LOGGING_PLUGIN", "value": strenv(VALUE)}]' "$csv_file"

yq -i '(.spec.install.spec.deployments[] | select(.name == "observability-operator").spec.template.spec.containers[] | select(.name == "operator").args) +=  ["--images=ui-troubleshooting-panel=$(RELATED_IMAGE_CONSOLE_TROUBLESHOOTING_PANEL_PLUGIN)"]' "$csv_file"
VALUE="${COO_CONSOLE_TROUBLESHOOTING_PANEL_PLUGIN_IMAGE_URL}" yq -i '(.spec.install.spec.deployments[] | select(.name == "observability-operator").spec.template.spec.containers[] | select(.name == "operator").env) += [{"name":"RELATED_IMAGE_CONSOLE_TROUBLESHOOTING_PANEL_PLUGIN", "value": strenv(VALUE)}]' "$csv_file"

yq -i '(.spec.install.spec.deployments[] | select(.name == "observability-operator").spec.template.spec.containers[] | select(.name == "operator").args) +=  ["--images=ui-monitoring=$(RELATED_IMAGE_CONSOLE_MONITORING_PLUGIN)"]' "$csv_file"
VALUE="${COO_CONSOLE_MONITORING_PLUGIN_IMAGE_URL}" yq -i '(.spec.install.spec.deployments[] | select(.name == "observability-operator").spec.template.spec.containers[] | select(.name == "operator").env) += [{"name":"RELATED_IMAGE_CONSOLE_MONITORING_PLUGIN", "value": strenv(VALUE)}]' "$csv_file"

yq -i '(.spec.install.spec.deployments[] | select(.name == "observability-operator").spec.template.spec.containers[] | select(.name == "operator").args) +=  ["--images=korrel8r=$(RELATED_IMAGE_KORREL8R)"]' "$csv_file"
VALUE="${COO_KORREL8R_IMAGE_URL}" yq -i '(.spec.install.spec.deployments[] | select(.name == "observability-operator").spec.template.spec.containers[] | select(.name == "operator").env) += [{"name":"RELATED_IMAGE_KORREL8R", "value": strenv(VALUE)}]' "$csv_file"

# set openshift.enabled feature gate
yq -i '(.spec.install.spec.deployments[] | select(.name == "observability-operator").spec.template.spec.containers[] | select(.name == "operator").args) += ["--openshift.enabled=true"]' "$csv_file"

# Set CSV .spec.version to downstream version.
VALUE="${PRODUCT_VERSION}" yq -i '.spec.version = strenv(VALUE)' "${csv_file}"

# Add .olm.skipRange annotation
VALUE=">="${CI_X_VERSION}.${CI_Y_VERSION}.0" <${PRODUCT_VERSION}" yq -i '.metadata.annotations += {"olm.skipRange": strenv(VALUE)}' "${csv_file}"

# Set replaces based upon the version defined from the environment variable or
# calculate it to be the previous z-stream
python3 - << END
replaces = "${CSV_REPLACES_VERSION:-}"
if replaces == "":
  patch = int("${Z_VERSION}") - 1
  if patch > 0:
    replaces = "${X_VERSION}" + "." + "${Y_VERSION}" + "." + str(patch)
if replaces != "":
  import os, yaml
  with open('${csv_file}', 'r') as f:
    y = yaml.safe_load(f) or {}
    y['spec']['replaces'] = "cluster-observability-operator." + replaces
  with open('${csv_file}', 'w') as f:
    yaml.dump(y, f)
END

# Set CSV .metadata.name to downstream version.
VALUE="${PRODUCT_VERSION}" yq -i '.metadata.name = "cluster-observability-operator.v" + strenv(VALUE)' "${csv_file}"

# TODO jan temp workaround until we have obo bundle creation fixed
sed -i -e "s|image: observability-operator.*|image: ${COO_IMAGE_URL}|g" "$csv_file"
sed -i -e "s|containerImage: observability-operator.*|containerImage: ${COO_IMAGE_URL}|g" "$csv_file"
